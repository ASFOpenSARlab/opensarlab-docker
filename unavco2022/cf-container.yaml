AWSTemplateFormatVersion: '2010-09-09'

Parameters:

  CodeCommitSourceRepo:
    Type: String
    Default: ''

  CodeCommitSourceBranch:
    Type: String
    Default: ''

  CostTagKey:
    Type: String
    Default: "osl-billing"

  CostTagValue:
    Type: String
    Default: ''

Resources:

  ContainerPipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::Region}-${CostTagValue}-container-pipeline-role
      AssumeRolePolicyDocument:
        Statement:
          Effect: Allow
          Principal:
            Service: 
              - cloudformation.amazonaws.com
              - codebuild.amazonaws.com
              - codepipeline.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      Policies:
        - PolicyName: !Sub ${AWS::Region}-${CostTagValue}-container-pipeline-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "codecommit:GitPull"
                Resource: !Sub 'arn:aws:codecommit:*:*:${CodeCommitSourceRepo}'

  ImagesCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${CostTagValue}-images
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        Image: aws/codebuild/standard:5.0
        ComputeType: BUILD_GENERAL1_SMALL
        PrivilegedMode: true
      ServiceRole: !GetAtt ContainerPipelineRole.Arn
      Tags:
        - Key: !Sub ${CostTagKey}
          Value: !Sub ${CostTagValue}
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: 0.2

          env:
            git-credential-helper: yes
            shell: bash
            secrets-manager:
              DH_CREDS: "dockerhub/creds"

          phases:
            install:
              runtime-versions:
                python: 3.9
            build:
              on-failure: ABORT
              commands:
              - echo "Logging into ECR...";
                docker login -u AWS -p $(aws ecr get-login-password --region ${AWS::Region}) ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com
              - echo "Logging into Docker Hub user...";
                dh_username=$(echo $DH_CREDS | cut -f1 -d' ');
                echo $DH_CREDS | cut -f2 -d' ' > dh.pass;
                docker login -u $dh_username -p $(cat dh.pass)
              - export DOCKER_REGISTRY="${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${CostTagValue}-container"
              - cd images;
                for p in $(ls -d */ | cut -f1 -d/); do
                  echo "Building image '$p'";
                  python3 check_ecr.py --image_name $p --aws_region ${AWS::Region} --container_namespace ${CostTagValue}-container;
                  cd $p;
                  bash build.sh $p;
                  cd ..;
                done

  PipelineBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub codepipeline-${AWS::Region}-${CostTagValue}-container
      Tags:
        - Key: !Sub ${CostTagKey}
          Value: !Sub ${CostTagValue}

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties: 
      ArtifactStore: 
        Type: S3
        Location: !Ref PipelineBucket
      Name: !Sub ${CostTagValue}-Container-Pipeline
      RestartExecutionOnUpdate: False
      RoleArn: !GetAtt ContainerPipelineRole.Arn
      Tags: 
        - Key: !Sub ${CostTagKey}
          Value: !Sub ${CostTagValue}
      Stages:
        - Name: !Sub ${CostTagValue}-Source
          Actions:
            - Name: Source
              RunOrder: 1
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: "1"
              Configuration:
                BranchName: !Sub ${CodeCommitSourceBranch}
                OutputArtifactFormat: CODEBUILD_CLONE_REF
                PollForSourceChanges: "false"
                RepositoryName: !Sub ${CodeCommitSourceRepo}
              OutputArtifacts:
                - Name: SourceArtifact
              Region: !Sub ${AWS::Region}
              Namespace: SourceVariables

        - Name: !Sub ${CostTagValue}-Build-Images
          Actions:
            - Name: images
              RunOrder: 1
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref ImagesCodeBuild
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts: []
              Region: !Sub ${AWS::Region}
